name: Run Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            compiler: clang
            cc: clang
            cxx: clang++
          - os: windows-latest
            compiler: msvc
            cc: cl
            cxx: cl
          - os: macos-latest
            compiler: clang
            cc: clang
            cxx: clang++

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set environment variables
        if: matrix.compiler != 'msvc'
        run: |
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV

      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.313.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Install missing deps for Linux env
        run: sudo apt-get install libxkbcommon-x11-dev libxinerama-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Create build directory
        run: cmake -E make_directory build

      - name: Configure with CMake
        working-directory: build
        run: cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build tests
        working-directory: build
        run: cmake --build . --config Release

      - name: Run tests
        working-directory: build
        run: ctest --output-on-failure -C Release
