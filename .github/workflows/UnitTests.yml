name: Run Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - os: ubuntu-latest
#            compiler: gcc
#            cc: gcc
#            cxx: g++
#          - os: ubuntu-latest
#            compiler: clang
#            cc: clang
#            cxx: clang++
          - os: windows-latest
            compiler: msvc
            cc: cl
            cxx: cl
          - os: macos-latest
            compiler: clang
            cc: clang
            cxx: clang++

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup MSVC (Windows)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set environment variables
        run: |
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV

      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.313.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Set DYLD_LIBRARY_PATH for Vulkan lib (Apple)
        run: export DYLD_LIBRARY_PATH="$VULKAN_SDK/lib:$DYLD_LIBRARY_PATH" &&
          echo "DYLD_LIBRARY_PATH=$VULKAN_SDK/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest'

      - name: Install missing deps (Linux)
        run: sudo apt-get install libxkbcommon-x11-dev libxinerama-dev libxcursor-dev libxi-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Install Swiftshader
        env:
          SWIFTSHADER_WINDOWS_URL: https://github.com/nikitalita/swiftshader-dist-win/releases/download/2022-05-27_00-04/swiftshader-2022-05-27_00-04-subzero.7z.zip
          SWIFTSHADER_LINUX_URL: https://github.com/qarmin/gtk_library_store/releases/download/3.24.0/swiftshader2.zip
          SWIFTSHADER_MACOS_URL: https://github.com/nikitalita/swiftshader-builds/releases/download/1.0.0/swiftshader-vulkan-r6216.7997cbc34b-macos-10.15.zip
        shell: bash
        run: |
          export SWIFTSHADER_DEST_DIR='${{ github.workspace }}'
          mkdir -p $SWIFTSHADER_DEST_DIR
          if [ "$RUNNER_OS" == "Linux" ]; then
            wget ${{ env.SWIFTSHADER_LINUX_URL }} -O swiftshader.zip
            unzip swiftshader.zip -d $SWIFTSHADER_DEST_DIR
            rm swiftshader.zip
            SWIFTSHADER_LIB_NAME="./libvk_swiftshader.so"
            sed -i "s|PATH_TO_CHANGE|$SWIFTSHADER_LIB_NAME|" $SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json
            echo "VK_ICD_FILENAMES=$SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            wget ${{ env.SWIFTSHADER_MACOS_URL }} -O swiftshader.zip
            unzip swiftshader.zip -d temp-ss-dl/
            rm swiftshader.zip
            mv temp-ss-dl/lib/libvk_swiftshader.dylib $SWIFTSHADER_DEST_DIR/libvk_swiftshader.dylib
            # cp $SWIFTSHADER_DEST_DIR/libvk_swiftshader.dylib $SWIFTSHADER_DEST_DIR/libvulkan.1.dylib
            mv temp-ss-dl/share/vulkan/icd.d/vk_swiftshader_icd.json $SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json
            rm -rf temp-ss-dl/
            sed -i '' "s/..\/..\/..\/lib\/libvk_swiftshader.dylib/.\/libvk_swiftshader.dylib/" "$SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json" 
            echo "VK_ICD_FILENAMES=$SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json" >> $GITHUB_ENV
            export VK_ICD_FILENAMES="$SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            arch="x64"
            choco install --yes 7zip wget
            wget -O swiftshader.zip ${{env.SWIFTSHADER_WINDOWS_URL}}
            7z x swiftshader.zip -otemp-ss-dl/
            rm swiftshader.zip
            mv temp-ss-dl/swiftshader-*/swiftshader-*.7z temp-ss-dl/swiftshader.7z
            7z x temp-ss-dl/swiftshader.7z -otemp-ss-dl/swiftshader
            rm temp-ss-dl/swiftshader.7z
            mv temp-ss-dl/swiftshader/$arch/bin/vk_swiftshader.dll $SWIFTSHADER_DEST_DIR/vk_swiftshader.dll
            mv temp-ss-dl/swiftshader/$arch/bin/vulkan-1.dll $SWIFTSHADER_DEST_DIR/vulkan-1.dll
            mv temp-ss-dl/swiftshader/$arch/bin/vk_swiftshader_icd.json $SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json
            rm -rf temp-ss-dl/
            echo "VK_ICD_FILENAMES=$SWIFTSHADER_DEST_DIR\vk_swiftshader_icd.json" >> $GITHUB_ENV
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
          echo $SWIFTSHADER_DEST_DIR
          echo $VK_ICD_FILENAMES
          cat $SWIFTSHADER_DEST_DIR/vk_swiftshader_icd.json

      - name: Install Clang (Apple)
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"
        if: matrix.os == 'macos-latest' && matrix.compiler == 'clang'

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Create build directory
        run: cmake -E make_directory build

      - name: Configure with CMake
        working-directory: build
        run: cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build tests
        working-directory: build
        run: cmake --build . --config Release

      - name: Run tests
        working-directory: build
        run: ctest --output-on-failure -C Release
